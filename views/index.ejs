<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/styles/styles.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.2/css/all.css" />
    <title>ToDo App</title>
  </head>
  <body>
    <div class="container">
      <div class="col-sm box" id="heading">
        <!-- DATE DATA -->
        <%- include("partials/date.ejs") %>
      </div>
      
      <div class="box" id="weather">
        <h2>Today's Weather: <%=fahrenheit %>°F / <%=celsius %>°C </h2>
      </div>
      
      <div class="box" id="mainlist">
        <div class="box" id="checklist">

          <form class="item" action="/daily" method="post">
            <input id="newTaskInput" type="text" name="newTask" placeholder="New task..." />
            <label for="priority">Priority level: </label>
            <select name="priority" id="priority">
              <option value="high">High</option>
              <option value="med">Medium</option>
              <option value="low">Low</option>
            </select>
            <button type="submit" name="task">
              Submit
            </button>
          </form>

          <% const priorityOrder = ["high", "med", "low"]; %>
          <% priorityOrder.forEach(priority => { %>
            <% if (tasks[priority]) { %>
              <% tasks[priority].forEach((task) => { %>
                <div class="task">
                  <div class="content">
                    <input type="checkbox" name="checkbox" value=0 />
                    <label name="labelElement" class="unchecked" for="<%= task %>"><%= task %></label>
                  </div>
                  <!-- Could modify this by adding      ^ onclick="toggleChecked(this);"-->
                  <button id="editButton" class="editButton" type="button" name="Edit">Edit</button>
                </div>
              <% }); %>
            <% } %>
          <% }); %>

          <button id="#deleteButton" class="hiddenButton" type="button" name="Delete">Delete</button>
          
        </div>
      </div>
    </div>
    <script>

      document.addEventListener("DOMContentLoaded", function() {
        const checkboxes = document.querySelectorAll('input[type="checkbox"]');

        checkboxes.forEach(function(checkbox) {
          const labelElement = checkbox.nextElementSibling;

          if (labelElement.classList.contains("checked")) {
            checkbox.checked = true;
          } else {
            checkbox.checked = false;
          }
        })
      })

      const checkboxList = document.getElementById("checklist");
      const checkedElements = [];

      checkboxList.addEventListener("click", (event) => {
        const clickedElement = event.target;

        if (clickedElement.type === "checkbox") {
          const labelElement = clickedElement.nextElementSibling;
          const deleteButton = document.getElementById("#deleteButton");

          if (labelElement.classList.contains("unchecked")) {
            labelElement.classList.remove("unchecked");
            labelElement.classList.add("checked");
            const index = checkedElements.indexOf(clickedElement);
            if (index === -1) {
              checkedElements.push(clickedElement);
            }

            if (checkedElements.length > 0) {
              deleteButton.classList.remove("hiddenButton");
              console.log(checkedElements);
            }    
            
            console.log("CLICKED");
          } else if (labelElement.classList.contains("checked")) {
            labelElement.classList.remove("checked");
            labelElement.classList.add("unchecked");
            const index = checkedElements.indexOf(clickedElement);
            if (index !== -1) {
              checkedElements.splice(index, 1);
            }

            if (checkedElements.length == 0) {
              deleteButton.classList.add("hiddenButton");
              console.log(checkedElements);
            }
            // console.log("unclicked");
          }
        }
      });

      const deleteButton = document.getElementById("#deleteButton");
      deleteButton.addEventListener("click", () => {
        checkedElements.forEach(checkbox => {
          const labelElement = checkbox.nextElementSibling;
          const taskText = labelElement.innerHTML;
          
          console.log("CLICKED DELETE BUTTON");
          console.log("THIS IS THE TASK TEXT:" + taskText);

          fetch(`/daily/delete-task/${encodeURIComponent(taskText)}`, {
            method: 'DELETE',
          }).then(response => {
            console.log("FETCH WORKED!!!!!!!!!!!!!!!!!!!!!!!!!!");
            console.log("RESPONSE: " + response.type);
            if (response.ok) {
              console.log("Task deleted: ", taskText);
              const taskElement = checkbox.closest('.task');
              if (taskElement) {
                taskElement.remove();
              }
            } else {
              throw new Error('Failed to delete task');
            }
          }).catch(error => {
            console.error('Error: ', error);
          });
        });

        checkedElements.length = 0;
        deleteButton.classList.add("hiddenButton");
      })

      document.addEventListener("DOMContentLoaded", () => {
        const taskContainers = document.querySelector('.task');
        taskContainers.forEach(function(taskContainer) {
          const editButton = taskContainer.querySelector('.editButton');

          taskContainer.addEventListener('mouseenter', () => {
            editButton.style.opacity = '1';
          });

          taskContainer.addEventListener('mouseleave', () => {
            editButton.style.opacity = '0';
          });
        });
      });


      // function deleteTask(checkbox) {
      //   const labelElement = checkbox.nextElementSibling;

      //   const taskText = labelElement.innerHTML;

      //   fetch(`/delete-task/${encodeURIComponent(taskText)}`, {
      //     method: 'DELETE',
      //   }).then(response => {
      //     if (response.ok) {
      //       console.log("Should be deleted.");
      //       const taskElement = checkbox.closest('.task');
      //       if (taskElement) {
      //         taskElement.remove();
      //       }

      //     } else {
      //       throw new Error('Failed to delete task');
      //     }
      //   }).catch(error => {
      //     console.error('Error: ', error);
      //   });
      // }

    </script>
  </body>
</html>
