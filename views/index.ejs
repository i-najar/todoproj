<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/styles/styles.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.2/css/all.css" />
    <title>ToDo App</title>
  </head>
  <body>
    <div class="container">
      <div class="col-sm box" id="heading">
        <!-- DATE DATA -->
        <%- include("partials/date.ejs") %>
      </div>
      
      <div class="box" id="weather">
        <h2>Today's Weather: <%=fahrenheit %>°F / <%=celsius %>°C </h2>
      </div>
      
      <div class="box" id="mainlist">
        <div class="box" id="checklist">

          <form class="item" action="/" method="post">
            <input id="newTaskInput" type="text" name="newTask" placeholder="New task..." />
            <label for="priority">Priority level: </label>
            <select name="priority" id="priority">
              <option value="high">High</option>
              <option value="med">Medium</option>
              <option value="low">Low</option>
            </select>
            <button type="submit" name="task">
              <i class="fa-solid fa-arrow-right fa-sm"></i>
            </button>
          </form>

          <% const priorityOrder = ["high", "med", "low"]; %>
          <% priorityOrder.forEach(priority => { %>
            <% if (tasks[priority]) { %>
              <% tasks[priority].forEach((task) => { %>
                <div class="task">
                  <input type="checkbox" name="checkbox" value=0 onclick="deleteTask(this);"/>
                  <label name="labelElement" class="unchecked" for="<%= task %>"><%= task %></label>
                  <!-- Could modify this by adding      ^ onclick="toggleChecked(this);"-->
                </div>
              <% }); %>
            <% } %>
          <% }); %>
          
        </div>
      </div>
    </div>
    <script>

      const checkboxList = document.getElementById("checklist");
      checkboxList.addEventListener("click", (event) => {
        const clickedElement = event.target;

        if (clickedElement.type === "checkbox") {
          const labelElement = clickedElement.nextElementSibling;

          if (labelElement.classList.contains("unchecked")) {
            labelElement.classList.remove("unchecked");
            labelElement.classList.add("checked");
            console.log(checkbox.id);
            // console.log("clicked");
          } else if (labelElement.classList.contains("checked")) {
            labelElement.classList.remove("checked");
            labelElement.classList.add("unchecked");
            // console.log("unclicked");
          }
        }
      });

      function deleteTask(checkbox) {
        const labelElement = checkbox.nextElementSibling;

        const taskText = labelElement.innerHTML;

        fetch(`/delete-task/${encodeURIComponent(taskText)}`, {
          method: 'DELETE',
        }).then(response => {
          if (response.ok) {
            console.log("Should be deleted.");
            const taskElement = checkbox.closest('.task');
            if (taskElement) {
              taskElement.remove();
            }

          } else {
            throw new Error('Failed to delete task');
          }
        }).catch(error => {
          console.error('Error: ', error);
        });
      }

    </script>
  </body>
</html>
